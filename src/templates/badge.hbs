import * as React from "react"
import { cva, type VariantProps } from "class-variance-authority"
import { cn } from "@/lib/utils"

const {{componentName}}Variants = cva(
  "inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2",
  {
    variants: {
      variant: {
        default:
          "border-transparent bg-primary text-primary-foreground hover:bg-primary/80",
        secondary:
          "border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80",
        destructive:
          "border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80",
        outline: "text-foreground",
      },
    },
    defaultVariants: {
      variant: "default",
    },
  }
)

export interface {{ComponentName}}Props
  extends React.HTMLAttributes<HTMLDivElement>,
    VariantProps<typeof {{componentName}}Variants> {
  {{#each props}}
  {{name}}{{#unless required}}?{{/unless}}: {{type}}{{#if description}} // {{description}}{{/if}}
  {{/each}}
}

function {{ComponentName}}({ className, variant, {{#each props}}{{name}}, {{/each}}...props }: {{ComponentName}}Props) {
  return (
    <div 
      className={cn({{componentName}}Variants({ variant }), className)} 
      {{#if accessibility.ariaLabel}}aria-label="{{accessibility.ariaLabel}}"{{/if}}
      {{#if accessibility.role}}role="{{accessibility.role}}"{{/if}}
      {...props} 
    >
      {{#if children}}{props.children}{{else}}{{#if customContent}}{{{customContent}}}{{else}}{{ComponentName}}{{/if}}{{/if}}
    </div>
  )
}

export { {{ComponentName}}, {{componentName}}Variants }