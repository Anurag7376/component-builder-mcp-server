// Test script for Vercel deployment validation
import { readFile } from 'fs/promises';\nimport { join } from 'path';\nimport { fileURLToPath } from 'url';\nimport { dirname } from 'path';\n\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = dirname(__filename);\n\nasync function validateDeployment() {\n  console.log('üîç Validating Vercel deployment structure...');\n  \n  const checks = [\n    {\n      name: 'vercel.json configuration',\n      path: join(__dirname, 'vercel.json'),\n      validate: (content) => {\n        const config = JSON.parse(content);\n        return config.functions && config.rewrites && config.buildCommand;\n      }\n    },\n    {\n      name: 'package.json dependencies',\n      path: join(__dirname, 'package.json'),\n      validate: (content) => {\n        const pkg = JSON.parse(content);\n        return pkg.dependencies && pkg.dependencies['@vercel/node'];\n      }\n    },\n    {\n      name: 'API functions',\n      paths: [\n        join(__dirname, 'api', 'generate-component.ts'),\n        join(__dirname, 'api', 'validate-component.ts'),\n        join(__dirname, 'api', 'component-types.ts'),\n        join(__dirname, 'api', 'component-template.ts')\n      ],\n      validate: (content) => {\n        return content.includes('VercelRequest') && content.includes('VercelResponse');\n      }\n    }\n  ];\n\n  let allPassed = true;\n\n  for (const check of checks) {\n    try {\n      if (check.path) {\n        const content = await readFile(check.path, 'utf8');\n        if (check.validate(content)) {\n          console.log(`‚úÖ ${check.name}`);\n        } else {\n          console.log(`‚ùå ${check.name} - validation failed`);\n          allPassed = false;\n        }\n      } else if (check.paths) {\n        let pathsPassed = true;\n        for (const path of check.paths) {\n          try {\n            const content = await readFile(path, 'utf8');\n            if (!check.validate(content)) {\n              console.log(`‚ùå ${check.name} - ${path} validation failed`);\n              pathsPassed = false;\n              allPassed = false;\n            }\n          } catch (error) {\n            console.log(`‚ùå ${check.name} - ${path} not found`);\n            pathsPassed = false;\n            allPassed = false;\n          }\n        }\n        if (pathsPassed) {\n          console.log(`‚úÖ ${check.name}`);\n        }\n      }\n    } catch (error) {\n      console.log(`‚ùå ${check.name} - file not found`);\n      allPassed = false;\n    }\n  }\n\n  console.log('\\n' + '='.repeat(50));\n  if (allPassed) {\n    console.log('üéâ All deployment checks passed!');\n    console.log('\\nüìã Ready for Vercel deployment:');\n    console.log('   1. Run: vercel --prod');\n    console.log('   2. Or use: vercel --prod --local-config deployment/vercel/vercel.json');\n  } else {\n    console.log('‚ùå Some deployment checks failed. Please fix the issues above.');\n  }\n}\n\n// Run validation\nvalidateDeployment().catch(console.error);